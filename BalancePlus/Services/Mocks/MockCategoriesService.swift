import Foundation

/// –ü—Ä–æ—Ç–æ–∫–æ–ª, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
protocol CategoriesServiceProtocol {
    /// –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    /// - Returns: –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ `Category`
    /// - Throws: –û—à–∏–±–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö
    func fetchAllCategories() async throws -> [Category]

    /// –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–¥–æ—Ö–æ–¥ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥)
    /// - Parameter direction: –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (`.income` –∏–ª–∏ `.outcome`)
    /// - Returns: –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ `Category`, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞–Ω–Ω–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é
    /// - Throws: –û—à–∏–±–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö.
    func fetchCategoriesByDirection(for direction: Direction) async throws -> [Category]
}

/// –ú–æ–∫ —Å–µ—Ä–≤–∏—Å–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
/// –ü–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞—Ä–∞–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π
final class MockCategoriesService: CategoriesServiceProtocol {
    private let mockCategories: [Category] = [
        // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
        Category(id: 1, name: "–ó–∞—Ä–ø–ª–∞—Ç–∞", emoji: "üí∞", direction: .income),
        Category(id: 2, name: "–ü–æ–¥–∞—Ä–∫–∏", emoji: "üéÅ", direction: .income),
        Category(id: 3, name: "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", emoji: "üìà", direction: .income),
        Category(id: 4, name: "–í–æ–∑–≤—Ä–∞—Ç –¥–æ–ª–≥–∞", emoji: "ü§ù", direction: .income),

        // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
        Category(id: 101, name: "–ï–¥–∞ –∏ –ø—Ä–æ–¥—É–∫—Ç—ã", emoji: "üçî", direction: .outcome),
        Category(id: 102, name: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", emoji: "üöó", direction: .outcome),
        Category(id: 103, name: "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", emoji: "üé¨", direction: .outcome),
        Category(id: 104, name: "–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏", emoji: "üí°", direction: .outcome),
        Category(id: 105, name: "–û–¥–µ–∂–¥–∞", emoji: "üëï", direction: .outcome),
        Category(id: 106, name: "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", emoji: "üìö", direction: .outcome),
        Category(id: 107, name: "–ó–¥–æ—Ä–æ–≤—å–µ", emoji: "üíä", direction: .outcome),
        Category(id: 108, name: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", emoji: "‚úàÔ∏è", direction: .outcome),
        Category(id: 109, name: "–°–≤—è–∑—å", emoji: "üì±", direction: .outcome),
        Category(id: 110, name: "–ü–æ–¥–∞—Ä–∫–∏ –¥—Ä—É–≥–∏–º", emoji: "üéÅ", direction: .outcome)
    ]

    /// –ò–º–∏—Ç–∏—Ä—É–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    /// –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    func fetchAllCategories() async throws -> [Category] {
        // –ò–º–∏—Ç–∞—Ü–∏—è —Å–µ—Ç–µ–≤–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
        try await Task.sleep(nanoseconds: 500_000_000) // 0.5 —Å–µ–∫—É–Ω–¥—ã
        return mockCategories
    }

    /// –ò–º–∏—Ç–∏—Ä—É–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é (–¥–æ—Ö–æ–¥/—Ä–∞—Å—Ö–æ–¥)
    /// –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    /// - Parameter direction: –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    func fetchCategoriesByDirection(for direction: Direction) async throws -> [Category] {
        // –ò–º–∏—Ç–∞—Ü–∏—è —Å–µ—Ç–µ–≤–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
        try await Task.sleep(nanoseconds: 500_000_000) // 0.5 —Å–µ–∫—É–Ω–¥—ã
        return mockCategories.filter { $0.direction == direction }
    }
}
